name: gds

on:
  workflow_dispatch:
  push:
    # Don't run on project submissions:
    branches-ignore:
      - projects/tt_um_*
  pull_request:
    # Don't run on project submissions:
    paths-ignore:
      - projects/tt_um_*/**

jobs:
  gds:
    env:
      PYTHONIOENCODING: utf-8
      PDK: ihp-sg13g2
      PDK_ROOT: ${{ github.workspace }}/pdk
      # Uncomment the following line to build only the specified projects:
      #TT_ONLY_PROJECTS: tt_um_chip_rom,tt_um_factory_test

    runs-on: ubuntu-24.04
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - run: pip install -r tt-multiplexer/py/requirements.txt -r tt/requirements.txt

      - name: Load OpenLane environment variables
        run: cat .github/config/openlane.txt | tee -a $GITHUB_ENV

      - name: Checkout OpenLane 2 repo
        uses: actions/checkout@v4
        with:
          repository: TinyTapeout/openlane2
          path: openlane2
          ref: ihp

      - name: Checkout IHP PDK
        uses: actions/checkout@v4
        with:
          repository: TinyTapeout/IHP-Open-PDK
          path: ${{ env.PDK_ROOT }}
          ref: tt2025
          submodules: recursive

      - name: Update caravel configuration
        run: python ./tt/configure.py --update-shuttle

      - uses: cachix/install-nix-action@v26

      - uses: cachix/cachix-action@v14
        with:
          name: ${{ vars.CACHIX_CACHE || 'tinytapeout' }}
          extraPullNames: ${{ vars.CACHIX_CACHE_EXTRA || 'openlane' }}
          authToken: ${{ secrets.CACHIX_TOKEN }}

      # run OpenLane to build the GDS
      - name: Harden Chip ROM
        run: nix-shell $GITHUB_WORKSPACE/openlane2/shell.nix --run "python -m openlane --pdk-root $PDK_ROOT --manual-pdk --pdk $PDK tt/rom/config_ihp.json"

      - name: Harden tt_ctrl
        working-directory: tt-multiplexer/ol2/tt_ctrl
        run: nix-shell $GITHUB_WORKSPACE/openlane2/shell.nix --run "python build.py"

      - name: Harden tt_mux
        working-directory: tt-multiplexer/ol2/tt_mux
        run: nix-shell $GITHUB_WORKSPACE/openlane2/shell.nix --run "python build.py"

      - name: Copy macros
        run: python ./tt/configure.py --copy-macros

      - name: Patch tt_top build script to skip DRC
        run: |
          sed -i 's/^[[:space:]]*KLayout\.DRC,$/#&/' tt-multiplexer/ol2/tt_top/build.py
          sed -i 's/^[[:space:]]*Checker\.KLayoutDRC,$/#&/' tt-multiplexer/ol2/tt_top/build.py
          sed -i 's/^[[:space:]]*Magic\.DRC,$/#&/' tt-multiplexer/ol2/tt_top/build.py
          sed -i 's/^[[:space:]]*Checker\.MagicDRC,$/#&/' tt-multiplexer/ol2/tt_top/build.py

      - name: Harden tt_top
        working-directory: tt-multiplexer/ol2/tt_top
        run: nix-shell $GITHUB_WORKSPACE/openlane2/shell.nix --run "python build.py"

      - name: Copy final results
        run: python ./tt/configure.py --copy-final-results

      - name: Create IHP submission
        run: python ./tt/configure.py --create-ihp-submission

      #- name: Patch GL power pin assignments
      #  run: sed -i 's/^ assign \(v[a-z0-9]*\) = \(v[a-z]*\);$/ assign \1 = \2; assign \2 = \1;/' ihp/verilog/gl/tt_ihp_wrapper.v

      - name: upload GDS artifact
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: GDS
          path: tt-multiplexer/ol2/tt_top/runs/RUN_*/*

      - name: upload macros artifact
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: macros
          path: |
            tt-multiplexer/cfg/*.yaml
            tt-multiplexer/ol2/tt_top/gds/*
            tt-multiplexer/ol2/tt_top/lef/*
            tt-multiplexer/ol2/tt_top/spef/*
            tt-multiplexer/ol2/tt_top/verilog/*
            tt-multiplexer/ol2/tt_mux/runs/RUN_*/*
            tt-multiplexer/ol2/tt_ctrl/runs/RUN_*/*

      - name: upload shuttle_index.json
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: shuttle_index
          path: shuttle_index.json

      - name: upload IHP submission directory
        uses: actions/upload-artifact@v4
        with:
          name: ihp_submission
          path: ihp

      ## Install iverilog, cocotb (required for GL test)
      #- name: install oss-cad-suite
      #  uses: YosysHQ/setup-oss-cad-suite@v3
      #  with:
      #    version: '2023-05-27'
      #    github-token: ${{ secrets.GITHUB_TOKEN }}

      #- name: GL simulation
      #  working-directory: verilog/dv/mux
      #  env:
      #    EXPECTED_REPO: ${{ github.repository }}
      #  run: |
      #    make clean test_mux_gl
      #    # make will return success even if the test fails, so check for failure in the results.xml
      #    ! grep failure results.xml

      #- name: upload GL test results
      #  if: success() || failure()
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: gl_test_vcd
      #    path: |
      #      verilog/dv/mux/results.xml
      #      verilog/dv/mux/test_mux.vcd
      #      verilog/dv/mux/test_mux.gtkw
